[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Data collection",
    "section": "",
    "text": "Spreadsheets are an important tool to enter and store data and used in every day life in science. As useful as they are, there are also many traps and problems with spreadsheets. Scientists have lost data, because of spreadsheets such as Excel convert names to dates. Being aware of such issues is key when wroking with spreadsheets.\nIn this chapter, we will show you best practice to design and organize tidy spreadsheets that are readable to humans and machines. We want you to learn to use spreadsheets that are less error-prone, work well in reproducible workflows and are easy to share with others. We recommend to apply these practices to datasets from the start, which should prevent tedious editing later. Also, we do not recommend to use spreadsheets for data analysis or visualization, because it is not reproducible.\nThe content of this page is heavily adapted from @broman2018data."
  },
  {
    "objectID": "01_collect_data.html",
    "href": "01_collect_data.html",
    "title": "\n2  Collect data\n",
    "section": "",
    "text": "Should data be collected on paper or digitally. There is no clear answer and it depends on what type of data you are collecting, and where.\nBoth are common and they have their advantages and disadvantages. Here, we just want to mention that digital data collection can be useful, because it saves the step of digitizing, which is a source of errors. Additionally, digital data entry allows to build in checks to avoid missing values."
  },
  {
    "objectID": "01_collect_data.html#content",
    "href": "01_collect_data.html#content",
    "title": "\n2  Collect data\n",
    "section": "\n2.2 Content",
    "text": "2.2 Content\nWhat information should your spreadsheet contain? This is not en exhaustive list, but gives guidance on what information it should contain:\n\nID (unique ID for each observation, individual)\nDate, time, observation nr\nLocation: region/site\nExperimental design: block/plot, nr of observation, treatments\nOrganism: species/population/genet\nresponse variable(s)\npredictors\nrecorder/scribe\nother observations: weather\nnotes"
  },
  {
    "objectID": "02_design-spreadsheets.html",
    "href": "02_design-spreadsheets.html",
    "title": "\n3  Design spreadsheets\n",
    "section": "",
    "text": "Spreadsheets should be rectangular (?fig-tidy-data).\nBest practice is to make spreadsheets completely rectangular. They should not have empty cells, rows or columns, titles or double headers.\nIt is however common that some of these things happen. Leaving a row blank or adding a title to a table is very often done. It’s not best practice, but also not a big problem for the downstream processing. Contrary, having two headers with different information is more difficult to process later.\nSometimes, two datasets are combined in one spreadsheet. For example, table ?fig-separate-files shows an example of pollinator observation data, which included observations about wind. On the right as a separate table in the same document, shows the scale for wind. It’s logical that one would want to have the two tables in the same file, when entering the data. But this will be more complicated than needed when importing the data. So, we recommend to keep these two tables in separate spreadsheets.\n\n\n\n\nTwo in one.\n\n\n\n\nAdd example on many small tables in one document!!!"
  },
  {
    "objectID": "02_design-spreadsheets.html#long-or-wide-format",
    "href": "02_design-spreadsheets.html#long-or-wide-format",
    "title": "\n3  Design spreadsheets\n",
    "section": "\n3.2 Long or wide format",
    "text": "3.2 Long or wide format\nDatasets can be long or wide and there is often a debate which of these formats are better. We do not have a strong opinion on this. As long as the general rules (see above and below) are followed, this does not matter very much. Many analysis require a long format, but for others (e.g. ordinations) a wide format is needed. This means that data often needs to be reshaped from long to wide and vice versa. And this is not very difficult (see reshape section).\nMake spreadsheets that makes data collection easy. For example, make one sheet per plot, avoid having multiple datasheets where you have to flip forth and back if possible. More importantly, when you digitize the data, the digital version should reflect the paper version. It’s not recommended that you change the format, just to have a long format. This can easily lead to errors."
  },
  {
    "objectID": "02_design-spreadsheets.html#single-value-per-cell",
    "href": "02_design-spreadsheets.html#single-value-per-cell",
    "title": "\n3  Design spreadsheets\n",
    "section": "\n3.3 Single value per cell",
    "text": "3.3 Single value per cell\nTidy spreadsheets follow the following rules:\n\neach variable should be one specific column,\neach observation should be one specific row,\neach cell at the intersection of a row and a column contains a single value.\n\nImportantly, put only one value per cell (?fig-tidy-data).\n\n\n\n\nA rectangular and tidy dataset with one value per cell.\n\n\n\n\nSometimes values are entered with their units, such as 42 g in one cell. It is better to separate the value and the unit into two columns.\nAnother common mistake is to add notes to a column. For example if a value is 0 because it is below the detection value, you could write 0 (below threshold). We recommend to only write the number in the first column and add notes on the value in a separate column called notes."
  },
  {
    "objectID": "02_design-spreadsheets.html#data-dictionary",
    "href": "02_design-spreadsheets.html#data-dictionary",
    "title": "\n3  Design spreadsheets\n",
    "section": "\n3.4 Data dictionary",
    "text": "3.4 Data dictionary\nA dataset on it’s own is often useless, because it can be difficult to understand what data each column contains. Therefore, it is best practise that a data dictionary goes with every dataset. A data dictionary is a separate file or table that describes the data and explains what each variable means.\nThis is useful if you want to share your data with collaborators, if somebody else is doing the data analysis for you, or even for your future self in a few years time. You might not remember exactly what each column means, the units, and how it was measured.\nA data dictionary should contain:\n\nVariable names\nExplanation of the variable\nUnit\nRange/expected min/max"
  },
  {
    "objectID": "02_design-spreadsheets.html#consistency",
    "href": "02_design-spreadsheets.html#consistency",
    "title": "\n3  Design spreadsheets\n",
    "section": "\n3.5 Consistency",
    "text": "3.5 Consistency\nConsistency is key. There are many ways of designing a spreadsheet, and there is not always a right or wrong. Find what works for you and stick to it.\nBe consistent for categorical variables, for example use the same spelling and not variations like: female, Female, F. Latin species names is a common problem and where typos happen very easily (?fig-typos).\n\n\n\n\nInconsistency in species names\n\n\n\n\nIf you have multiple files or datasets from the same experiment, be consistent with variable names and do not use variations like: site, location, siteID. This will make it more difficult to join datasets downstream.\nBe consistent with missing values. Do not use a mix of leaving the cell blank, NA and making notes like value missing. Also see section below for more details on missing values.\nBe consistent with file names.\nBe consistent with dates. Dates are particularly tricky and get some special attention here (see below). Preferably, use the ISO standard yyyy-mm-dd, for example 2022-10-12.\nBe consistent in your notes. We recommend to have a column with notes, which can be used to write down notes about the data or a specific value. For example, why a observation is missing, or something that was unusual during data collection etc. But again, be consistent when making these notes, because it will be easier to make use of the notes downstream. Using different versions for the same information like gone, missing, vanished will make it difficult to quantify how many times a specific problem occured.\nAvoid space in cells before ” female” or after “female”."
  },
  {
    "objectID": "02_design-spreadsheets.html#meaningful-naming",
    "href": "02_design-spreadsheets.html#meaningful-naming",
    "title": "\n3  Design spreadsheets\n",
    "section": "\n3.6 Meaningful naming",
    "text": "3.6 Meaningful naming\nUse good and meaningful names. What do we mean by this? Variable names should be easy to use in downstream data analysis. In addition, variable names should be meaningful which means that the name should explain the variable to some extent.\nAvoid spaces in names, and rather use underscore (_) or hyphen (-). There are different styles (see ?fig-cases) and there are debates about which one is preferable. The truth is, it does not really matter, choose one and stick with it.\n\n\n\n\nDifferent styles for naming objects. Credit: Allison Horst.\n\n\n\n\nDo not use special characters other than underscore and hyphen in names. For example: +, %, &, /, ?, !, $, ,, #, @. Note that letters that might be common for you, for example å, æ and ø, are not so common in other countries and data analysis programs do not deal very well with them. Instead of nedbør use nedbor. This will make you life a lot easier.\nUse concise and meaningful names ((fig.final-final?)). The name should be short, but long enough to give a meaning. For example community_composition_2022.csv.\n\n\n\n\nFinal doc by PhDcomics.com\n\n\n\n\nIf you want to know more about this, we have created a tutorial on naming conventions."
  },
  {
    "objectID": "02_design-spreadsheets.html#standards",
    "href": "02_design-spreadsheets.html#standards",
    "title": "\n3  Design spreadsheets\n",
    "section": "\n3.7 Standards",
    "text": "3.7 Standards\nUse global data standards when available.\nOne example are geographic locations such as coordinates. They can be written in many different ways:\n\nDecimal degrees: 60.39299 5.32415\nDMS: 60°23’34.76” N 5°19’26.94” E\nUTM: 32V 297477.30699364 6700830.0640155\n\nWe recommend to use decimal degree (ISO 6709). For example the coordinates for Bergen (Norway) are 60.39299 °N and 5.32415 °E.\nAnother example are dates, that can also be written in many different ways:\n\n3.1.2022\n03/01/2200\n01-03-2022\netc.\n\nThis can lead to confusion, especially when the placement of the month and day are switched (?fig-dates).\nWe therefore strongly recommend to use the global standard ISO 8601 (Houston 1993) for dates, YYYY-MM-DD, such as 2022-10-12.\n\n\n\n\nMissunderstandings when not usig date standards. Credit: https://xkcd.com\n\n\n\n\nAnother issue with dates is, that programs like Excel can turn values into dates. For example names like “Oct-4”, which is a name of a gene, will be turned into a date. Be aware of such problems and check your dataset for dates that are not supposed to be dates.\nHow can you avoid such mistakes? You can avoid names that are turned into dates, or actively prevent it by adding a underscore or another character in front of such names. This can later be removed. Another way would be to force a column in excel to be a date or to be text."
  },
  {
    "objectID": "02_design-spreadsheets.html#missing-data",
    "href": "02_design-spreadsheets.html#missing-data",
    "title": "\n3  Design spreadsheets\n",
    "section": "\n3.8 Missing data",
    "text": "3.8 Missing data\nWe already mentioned to be consistent with missing data. We also recommend to use NA for missing data. Often missing data is left blank, and R will automatically fill in NAs. This is fine, but there is no way of distinguishing between missing data and a value that was forgotten.\nAlso note that missing data and zero are often not the same. Therefore, we recommend to distinguish between missing data (NA) and zero, which can mean not present."
  },
  {
    "objectID": "02_design-spreadsheets.html#point-or-comma-as-decimal-separator",
    "href": "02_design-spreadsheets.html#point-or-comma-as-decimal-separator",
    "title": "\n3  Design spreadsheets\n",
    "section": "\n3.9 Point or comma as decimal separator",
    "text": "3.9 Point or comma as decimal separator\nFor the decimal separator it is common to use a point or a comma. There is no general agreement on which one to use, and there are different practises in different countries. For example in Norway, the comma is the standard setting in Excel.\nAgain, it does not matter what you use, but use it consistently. We have guidelines for how to import datasets with different formats (see import chapter).\nImportantly, don’t fight Excel!!!!"
  },
  {
    "objectID": "02_design-spreadsheets.html#no-manipulation-or-calculations",
    "href": "02_design-spreadsheets.html#no-manipulation-or-calculations",
    "title": "\n3  Design spreadsheets\n",
    "section": "\n3.10 No manipulation or calculations",
    "text": "3.10 No manipulation or calculations\nWe strongly recommend to use datasheets only for data entry and storage. During data entry, the content of the spreadsheet can still be changed to reflect the paper version of the data or to make it consistent. But at some point we suggest to stop data manipulation by hand. From that point, data manipulation is done by code.\nThis is because any manipulation done by hand in Excel, cannot be reversed (at least once the document is saved and closed). Also, if you do a lot of manipulation in Excel, you won’t remember what has been done. Standard excel does not have track change to allow you to go back to older versions. In contrast, if data manipulation is done code-based, all manipulation can be changed and reversed.\nFor example, if you delete a column in Excel, save the document and leave the program. And the next day you realize that this was a mistake, it is not possible to retrieve this column. However if you leave the data file untouched, and do the manipulation in R, you can import the data again, run the code and just delete the command that was wrong.\nWe also do not recommend that you make calculations or summaries in your spreadsheet. Better practice is to use a data analysis tool like R for this, because it is reproducible."
  },
  {
    "objectID": "02_design-spreadsheets.html#no-formatting",
    "href": "02_design-spreadsheets.html#no-formatting",
    "title": "\n3  Design spreadsheets\n",
    "section": "\n3.11 No formatting",
    "text": "3.11 No formatting\nIt’s common to format tables, by for example using colours, or bold font. That is fine, as long as the formatting is not containing any information. For example colouring missing data. For that make a new column with notes that data is missing.\nData analysis programs do not understand highlighted cells or bold text and such information will simply be ignored and is therefore lost."
  },
  {
    "objectID": "02_design-spreadsheets.html#data-validation-tools",
    "href": "02_design-spreadsheets.html#data-validation-tools",
    "title": "\n3  Design spreadsheets\n",
    "section": "\n3.12 Data validation tools",
    "text": "3.12 Data validation tools\nData validation is a way to reduce errors in the data and can be built in when collecting or digitizing data.\nFor example you can:\n\nset ranges for valid numbers (e.g. only positive, range between two numbers)\nonly allow whole numbers or decimals\nadd a drop down menus for categorical data\ndefine the length of text (e.g. only 8 characters)\ndefine data types (e.g. to avoid conversion to dates)"
  },
  {
    "objectID": "02_design-spreadsheets.html#proof-reading",
    "href": "02_design-spreadsheets.html#proof-reading",
    "title": "\n3  Design spreadsheets\n",
    "section": "\n3.13 Proof reading",
    "text": "3.13 Proof reading\nProof reading is an essential step once the dataset is digitized. …"
  },
  {
    "objectID": "02_design-spreadsheets.html#backup-and-storage",
    "href": "02_design-spreadsheets.html#backup-and-storage",
    "title": "\n3  Design spreadsheets\n",
    "section": "\n3.14 Backup and storage",
    "text": "3.14 Backup and storage\nBack up your data in an unconnected data repository to avoid data loss. There are many options for this and they often have private or closed repositories, which means that you do not automatically need to share the data.\nTake pictures of paper versions of your data and store them in a save place. This can be useful for proof reading.\nSave your data as plain text formats, with comma or tab deliminator. We recommend csv files, which is a nonproprietary format. This means that it does not require any special software, but can be opened in any spreadsheet program.\nWe recommend that you save two copies of your data (?fig-workflow). A raw non-manipulated version, and a clean version of the data. Both can be stored in the same place, but indicate in the file name which version it is. Also provide the code for the data cleaning somewhere (e.g. GitHub). This is a transparent way of data cleaning and makes it possible to apply other data manipulation if needed.\n\n\n\n\nReproducible workflow."
  },
  {
    "objectID": "02_design-spreadsheets.html#version-control",
    "href": "02_design-spreadsheets.html#version-control",
    "title": "\n3  Design spreadsheets\n",
    "section": "\n3.15 Version control",
    "text": "3.15 Version control\nautomatic data validation\n\n\n\n\n\n\nHouston, Gary. 1993. “ISO 8601: 1988 Date/Time Representations.”"
  }
]