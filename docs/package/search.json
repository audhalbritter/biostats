[{"path":"index.html","id":"introduction","chapter":"1 Introduction","heading":"1 Introduction","text":"tutorial show write R package.","code":""},{"path":"index.html","id":"before-you-start","chapter":"1 Introduction","heading":"Before you start","text":"need installedRStudioR","code":""},{"path":"index.html","id":"why-write-your-own-package","chapter":"1 Introduction","heading":"1.1 Why write your own package","text":"Publish code implements novel statistical methodCode import data , example, loggerWrap various functions want reuse","code":""},{"path":"system-setup.html","id":"system-setup","chapter":"2 System setup","heading":"2 System setup","text":"use latest version R (currently 4.1.0) recent version RStudio.\ngood idea git installed GitHub (similar) account.also need install devtools packageThis also install usethis, roxygen2 testthat packages use.using Windows, may need install Rtools package contain C++ code similar.\ncan download install Rtools https://cran.r-project.org/bin/windows/Rtools/ using defaults.\nRtools R package.","code":"\ninstall.packages(\"devtools\")"},{"path":"creating-the-package-infrastructure.html","id":"creating-the-package-infrastructure","chapter":"3 Creating the package infrastructure","heading":"3 Creating the package infrastructure","text":"package starts life directory files subdirectories R expects.\nnothing stop building whole thing scratch.\nmuch easier get help usethis.create_package function takes path project want write, creates directory, add adds files subdirectories.name directory become name package.\nChoose carefully easier get right now change later.\nspecial rules naming packagesContain ASCII letters, numbers, ‘.’least two charactersStart letterNot end ‘.’function available::available() can tell name valid clashes existing package.chosen name, can create skeleton package.run , open new RStudio session.\nfiles tab look something like ..gitignore - files git ignore.Rbuildignore - R builds package, like unexpected files. .Rbuildignore tells ones can ignore.DemoPackage.Rproj - Rstudio projectDESCRIPTION - metadata packageNAMESPACE - functions imported/exported. automatically generated don’t edit file hand, delete becomes corrupt.R - folder R codeAlmost everything concerned setting package easier usethis package.\ngoing using lot, good idea load now.","code":"\navailable::available(\"helper\")\n# Choose a path on your computer\n# My package will be called DemoPackage\npackage_path = \"/home/gbsrt/Documents/teaching/DemoPackage\"\nusethis::create_package(path = package_path)\nlibrary(usethis)"},{"path":"creating-the-package-infrastructure.html","id":"description-file","chapter":"3 Creating the package infrastructure","heading":"3.1 DESCRIPTION file","text":"DESCRIPTION file contains information used CRAN make package page (see example devtools).Start editing title, author description fields DESCRIPTION files.\ntitle field must title case (really check submit CRAN).finished, sure save file otherwise changes -written.","code":"Package: DemoPackage\nTitle: What the Package Does (One Line, Title Case)\nVersion: 0.0.0.9000\nAuthors@R: \n    person(given = \"First\",\n           family = \"Last\",\n           role = c(\"aut\", \"cre\"),\n           email = \"first.last@example.com\",\n           comment = c(ORCID = \"YOUR-ORCID-ID\"))\nDescription: What the package does (one paragraph).\nLicense: `use_mit_license()`, `use_gpl3_license()` or friends to pick a\n    license\nEncoding: UTF-8\nLazyData: true\nRoxygen: list(markdown = TRUE)\nRoxygenNote: 7.1.1"},{"path":"creating-the-package-infrastructure.html","id":"choose-a-licence","chapter":"3 Creating the package infrastructure","heading":"3.2 Choose a licence","text":"need set licence package otherwise, legally, -one allowed make copy use .Frequently used open source licences R packages areMIT licence permissive licence, letting people almost anything (including use, copy, modify, merge, publish, distribute, sublicense, sell) software.\nGenerate use_mit_license()GPL licence lets people almost anything except distributing closed source versions.\nGenerate use_gpl_license()generally use MIT licence.\nData packages probably use CC0 licence.information licences, see R package book Choose License","code":""},{"path":"creating-the-package-infrastructure.html","id":"git-and-github","chapter":"3 Creating the package infrastructure","heading":"3.3 git and GitHub","text":"don’t use git GitHub writing package, many advantages .probably aware theseVersion controlCollaborationIssue tracking - bug reports feature requestsDistribution - people can install package directly CRAN.fourth can use GitHub actions.\nGitHub actions perform action repo.\nexample, use_github_action_check_standard() can check package works latest version R linux, macOS Windows every time push commit.\nessential want package released CRAN, useful anyway, can find problems apparent computer.See git GitHub tutorial make GitHub repo package.\nset GitHub actions, just run following command, commit push.","code":"\nuse_github_action_check_standard()"},{"path":"contents.html","id":"contents","chapter":"4 Contents","heading":"4 Contents","text":"","code":""},{"path":"contents.html","id":"basic-workflow","chapter":"4 Contents","heading":"4.1 Basic workflow","text":"Write tests (section 4.2)Write functions (section 4.3) documentation (section 4.4)Check package (section 4.7)Fix errors goto 3Test drive devtools::load_all()Build install (section 4.7.1)usually lots errors fix, sensible build package slowly, testing Check frequently.","code":""},{"path":"contents.html","id":"tests","chapter":"4 Contents","heading":"4.2 Tests","text":"need write tests package ensure functions supposed.\nprotect breaking package edit code.\nTests run package checkedYou can, ideally , write tests write functions.\ncan use testthat package tests.Set testing infrastructure withNow set test file one related functions use_test().create open file called test-import.R looks likeThe first argument test_that() description, second argument expression contains test.\ncomplex tests might need additional set-code expression.\nseveral expect_*() functions test different aspects function, including errors warnings thrown expected.\ntest_that() call can test multiple expectations.\ncan multiple test_that() calls per file.Look examples tests GitHub need inspiration.Functions much easier test functions one job.\nalso best practice writing functions.\nexample, writing package import, process, plot logger data, make least three functions , one function everything.","code":"\nuse_testthat()\nuse_test(name = \"import\")\ntest_that(\"multiplication works\", {\n  expect_equal(2 * 2, 4)\n})"},{"path":"contents.html","id":"functions","chapter":"4 Contents","heading":"4.3 Functions","text":"Functions made keyword function, can one arguments separated commas, needs assigning name.Functions need saved R/.\nRelated functions can saved file.","code":"\nmy_function <- function(arg1 = 1, arg2){\n  arg1 * arg2\n}\n\nmy_function(3, 4)"},{"path":"contents.html","id":"well-behaved-functions","chapter":"4 Contents","heading":"4.3.1 Well behaved functions","text":"Try alter state users R session.\nDon’t include calls library() require() functions (see section 4.4.1).\nneed change state, revert function finishes.\ncan withr::defer().\nbetter behaved base R equivalent .exit().\nEven function throws error, state options reverted original state.","code":"\nmy_function <- function(x){\n  op <- options(digits = 1) # set options\n  withr::defer(options(op)) #next line\n  print(x)\n}"},{"path":"contents.html","id":"data-validation---expect-the-unexpected.","chapter":"4 Contents","heading":"4.3.2 Data validation - expect the unexpected.","text":"going release package, need try make idiot proof.\nAssume users make mistakes data input.\nUse code validate data correct, else throw error.\nstatements stop() useful .","code":""},{"path":"contents.html","id":"s3-classes-in-r","chapter":"4 Contents","heading":"4.3.3 S3 classes in R","text":"use generic function R plot(), print(), autoplot() summary(), happens class object determined dispatched appropriate function, name generic followed name class, separated dot.call plot() object class cca dispatched plot.cca.can find class object class()class object can set class().object already class want keep , need something likeTo make print() plot() method my_class, simply make function called print.my_class plot.my_class.\nmethod declared automatically documentation (4.4) made.","code":"\nmy_function <- function(){\n  result <- complex_logic()\n  class(result) <- \"my_class\"\n  result\n  }\n  class(result) <- c(\"my_class\", class(result))"},{"path":"contents.html","id":"going-further-with-classes","chapter":"4 Contents","heading":"Going further with classes","text":"Make genericsUse formal S4 R6 class systems","code":""},{"path":"contents.html","id":"section","chapter":"4 Contents","heading":"4.3.4 …","text":"Ellipses can used two ways writing functions.first pass unknown arguments second function (e.g., plot.cca()).make plot.my_class() function can use ellipses don’t need specify possible arguments plot.Now arguments plot.default() can used.second way use ellipses variable number arguments.\ncan capture ... using list(), process .","code":"\nplot.my_class <- function(obj, ...){\n  #logic to prepare data for plotting\n  x <- obj$x\n  y <-obj$y\n  plot(x, y, ...)\n}\ndot_to_list <- function(...){\n  list(...)\n}\n\ndot_to_list(1, 2, \"c\")## [[1]]\n## [1] 1\n## \n## [[2]]\n## [1] 2\n## \n## [[3]]\n## [1] \"c\""},{"path":"contents.html","id":"using-dplyr-ggplot2-etc","chapter":"4 Contents","heading":"4.3.5 Using dplyr, ggplot2 etc","text":"Tidyverse packages dplyr ggplot2 use Non-Standard Evaluation (NSE) little challenging use functions.just something like get errorOne solution use curly-curly notationAnother arguments strings use .data pronoun rlang (don’t forget import rlang (see section 4.4.1.NSE can also problem functions don’t take column names arguments.next function work, generate note checking stage. check recognise .fix , either declare variables global line added file (outside function)., perhaps better, use .data pronoun.","code":"\nmy_select <- function(data, col){\n  select(data, col)\n}\n\nmy_select(penguins, col = species)## Error: object 'species' not found\n#select\nmy_select2 <- function(data, col){\n  select(data, {{col}})\n}\n\nmy_select2(penguins, col = species)## # A tibble: 344 × 1\n##    species\n##    <fct>  \n##  1 Adelie \n##  2 Adelie \n##  3 Adelie \n##  4 Adelie \n##  5 Adelie \n##  6 Adelie \n##  7 Adelie \n##  8 Adelie \n##  9 Adelie \n## 10 Adelie \n## # … with 334 more rows\n# filter\nmy_filter <- function(data, col, `%test%`, value){\n  filter(data, {{col}} %test% value)\n}\n\nmy_filter(penguins, col = species, `%test%` = `==`, value = \"Adelie\")## # A tibble: 152 × 8\n##    species island bill_length_mm bill_depth_mm flipper_length_… body_mass_g sex  \n##    <fct>   <fct>           <dbl>         <dbl>            <int>       <int> <fct>\n##  1 Adelie  Torge…           39.1          18.7              181        3750 male \n##  2 Adelie  Torge…           39.5          17.4              186        3800 fema…\n##  3 Adelie  Torge…           40.3          18                195        3250 fema…\n##  4 Adelie  Torge…           NA            NA                 NA          NA <NA> \n##  5 Adelie  Torge…           36.7          19.3              193        3450 fema…\n##  6 Adelie  Torge…           39.3          20.6              190        3650 male \n##  7 Adelie  Torge…           38.9          17.8              181        3625 fema…\n##  8 Adelie  Torge…           39.2          19.6              195        4675 male \n##  9 Adelie  Torge…           34.1          18.1              193        3475 <NA> \n## 10 Adelie  Torge…           42            20.2              190        4250 <NA> \n## # … with 142 more rows, and 1 more variable: year <int>\n#mutate Note the := operator.\nmy_mutate <- function(data, col1, col2, sum_col){\n  mutate(data, {{sum_col}} := {{col1}} + {{col2}})\n}\n\nmy_mutate(penguins, bill_length_mm, bill_depth_mm, sum_col = bill)## # A tibble: 344 × 9\n##    species island bill_length_mm bill_depth_mm flipper_length_… body_mass_g sex  \n##    <fct>   <fct>           <dbl>         <dbl>            <int>       <int> <fct>\n##  1 Adelie  Torge…           39.1          18.7              181        3750 male \n##  2 Adelie  Torge…           39.5          17.4              186        3800 fema…\n##  3 Adelie  Torge…           40.3          18                195        3250 fema…\n##  4 Adelie  Torge…           NA            NA                 NA          NA <NA> \n##  5 Adelie  Torge…           36.7          19.3              193        3450 fema…\n##  6 Adelie  Torge…           39.3          20.6              190        3650 male \n##  7 Adelie  Torge…           38.9          17.8              181        3625 fema…\n##  8 Adelie  Torge…           39.2          19.6              195        4675 male \n##  9 Adelie  Torge…           34.1          18.1              193        3475 <NA> \n## 10 Adelie  Torge…           42            20.2              190        4250 <NA> \n## # … with 334 more rows, and 2 more variables: year <int>, bill <dbl>\n#ggplot\nmy_plot <- function(data, x, y){\n  ggplot(data, aes(x = {{x}}, y = {{y}})) + \n    geom_point()\n}\n\nmy_plot(penguins, x = bill_length_mm, y = body_mass_g)## Warning: Removed 2 rows containing missing values (geom_point).\nmy_select3 <- function(data, col){\n  select(data, .data[[col]])\n}\n\nmy_select3(penguins, col = \"species\")## # A tibble: 344 × 1\n##    species\n##    <fct>  \n##  1 Adelie \n##  2 Adelie \n##  3 Adelie \n##  4 Adelie \n##  5 Adelie \n##  6 Adelie \n##  7 Adelie \n##  8 Adelie \n##  9 Adelie \n## 10 Adelie \n## # … with 334 more rows\nprocess_penguin_type_data <- function(data){\n  data %>% \n    group_by(species) %>% \n    summarise(bill = mean(bill_length_mm))\n} > checking R code for possible problems ... NOTE\n  process_penguin_type_data: no visible binding for global variable\n    ‘species’\n  process_penguin_type_data: no visible binding for global variable\n    ‘bill_length_mm’\n  Undefined global functions or variables:\n    bill_length_mm species\nutils::globalVariables(c('bill_length_mm', 'species'))\nprocess_penguin_type_data <- function(data){\n  data %>% \n    group_by(.data$species) %>% \n    summarise(bill = mean(.data$bill_length_mm))\n} "},{"path":"contents.html","id":"documentation-with-roxygen2","chapter":"4 Contents","heading":"4.4 Documentation with Roxygen2","text":"documentation package lives man/ .Rd files.\nfiles written LaTeX like language, quite hard get right.\nFortunately, roxygen2 package takes pain away format much simpler. Also, parts documentation automatically generated inspecting code, easier keep documentation code sync file.roxygen2 comments sit function, start #' distinguish ordinary comments.first sentence roxygen becomes title help file.\ncan use roxygen tags rest documentation.\nRoxygen tags start @.\ntype , RStudio gives suggestions.@description One paragraph description function .@param argument_name followed description argument\nparameters must documented.@details gory details. Possibly several paragraphs (separate blank line).@return description object returned function ()@examples\nWorking examples run package tested.\nExamples run relatively quickly become tedious.\nneed use library() load packages needed package developed.\npackages loaded library() need declared DESCRIPTION file (see section 4.4.1)can use markdown enhance documentation, including links etc.","code":""},{"path":"contents.html","id":"importing-and-exporting-functions","chapter":"4 Contents","heading":"4.4.1 Importing and exporting functions","text":"roxygen comments also import functions packages mark functions export.\ninformation written NAMESPACE file don’t (see R package book information file).want use function package (except base) need add dependency package DESCRIPTION file.can now use function dplyr dplyr::mutate.\ngets messy need use lots functions package.\nbetter import .\nuseto import functions package, orif want just import specific functions.\nsafer minimises risk conflicts.Forgetting import functions declare dependencies DESCRIPTION file common problems checking package, message informative (section 7).Export functions want users access adding @export roxygen comments.","code":"\nuse_package(\"dplyr\")\n#use_dev_package(\"packageFromGithub\")#' @import dplyr#' @importFrom dplyr %>%"},{"path":"contents.html","id":"generate-the-.rd-files","chapter":"4 Contents","heading":"4.4.2 Generate the .Rd files","text":"Convert roxygen comments .Rd files withView compiled help files runningwhich simulates loading package without install properly.\ncan use ? normal get help (links won’t work)","code":"\ndevtools::document() \ndevtools::load_all()"},{"path":"contents.html","id":"data","chapter":"4 Contents","heading":"4.5 Data","text":"Many packages include data, either needed examples, aim package distribute dataset (probably functions access ).Data stored data/ .rda files can loaded R data() function.best way add .rda files use function use_data_raw() name dataset want create.create data_raw/ add file called dataset1.R looks like .Add code needed reproducibly create dataset1, perhaps importing processing data files copied data-raw/.run entire script, code create dataset1.rda data/.","code":"\ndata(\"penguins\", package = \"palmerpenguins\")\nuse_data_raw(name = \"dataset1\")\n## code to prepare `dataset1` dataset goes here\n\nusethis::use_data(dataset1, overwrite = TRUE)"},{"path":"contents.html","id":"documenting-data","chapter":"4 Contents","heading":"4.5.1 Documenting data","text":"Data data/ need documented.\nWrite documentation data using roxygen2 save R/.\nusually call file data.R document datasets .traitstrap package, one data objects called trait.\nentry R/data.R:first line gives title followed desciption.\n@format field lets describe data.\nlast line object name quotes (note #’ first).","code":"#' Trait data\n#'\n#' A dataset containing plant traits in control plots on Svalbard from PFCT4\n#' TraitTrain course.\n#'\n#' @format A data frame with 53940 rows and 10 variables:\n#' \\describe{\n#'   \\item{Taxon}{species name}\n#'   \\item{Site}{site name}\n#'   \\item{PlotID}{plot name}\n#'   \\item{Trait}{trait name with unit}\n#'   \\item{Value}{trait value}\n#' }\n#' @source \\url{http://https://www.uib.no/en/rg/EECRG/114808/plant-functional-traits-course-4}\n\"trait\""},{"path":"contents.html","id":"adding-other-files","chapter":"4 Contents","heading":"4.6 Adding other files","text":"R gets upset files supposed R package.\nput extra files package root directory.\nsolution put extra files subdirectories inst/.want include raw data files package functions process , can go inst/extdata/.package compiled, inst/ removed extdata/ put package root directory.\npath file can accessed system.file().Tutorials resources can also put suitable directories inst/.","code":"\npath <- system.file(\"extdata\", package = \"readr\")\nlist.files(path)"},{"path":"contents.html","id":"checking","chapter":"4 Contents","heading":"4.7 Checking","text":"Now ready check package compiles correctly.\ncheck function slow (checks many aspects package), running , run functions check different aspects package.fixing problems, check entire package either Check button Build tab (panel Environment tab), devtools::check().\nexactly work, Check button leaves console available.Check thorough.\nalmost certainly report errors, warnings notes first times run .\nIdentify problems, fix run check .Now useand give functions test drive.","code":"\n# build the documentation\ndevtools::document()\n\n# check the examples work\ndevtools::run_examples()\n\n# check the tests work\ndevtools::test()\ndevtools::load_all()"},{"path":"contents.html","id":"build-and-install","chapter":"4 Contents","heading":"4.7.1 Build and install","text":"happy package, use “Install Restart” button build tab install package.\nNow can load library() package.","code":""},{"path":"more-documentation.html","id":"more-documentation","chapter":"5 More documentation","heading":"5 More documentation","text":"","code":""},{"path":"more-documentation.html","id":"readme.md-for-github","chapter":"5 More documentation","heading":"5.1 readme.md for GitHub","text":"GitHub repo needs readme file explain users install package get started.can create readme.Rmd withThis create draft fill knit, set git hooks remind commit readme.Rmd resulting readme.md together.\nedit readme.md hand.","code":"\nuse_readme_rmd()"},{"path":"more-documentation.html","id":"vignettes","chapter":"5 More documentation","heading":"5.2 Vignettes","text":"vignette long-form documentation package.\ncan anything walk-use package detailed explanation implementation.Create vignette :modify DESCRIPTION file, draft R markdown file vignettes/myvignette.Rmd.\nFill knit .","code":"\nuse_vignette(\"my-vignette\")"},{"path":"more-documentation.html","id":"a-package-website","chapter":"5 More documentation","heading":"5.3 A package website","text":"packagedown amazing package takes packages help files vignettes makes website can host GitHub.minimal website, need runCommit push built webpages, configure GitHub repo support publishing (5 clicks).can even set GitHub actions build website automatically every push.","code":"\n# Run *once* to configure package to use pkgdown\nusethis::use_pkgdown()\n# Run to build the website\npkgdown::build_site()"},{"path":"distributing-your-package.html","id":"distributing-your-package","chapter":"6 Distributing your package","heading":"6 Distributing your package","text":"package public repo GitHub, don’t anything .\nUsers can install withYou can also submit package CRAN consideration.\nlot work using GitHub distribution, make package available wider audience.\nSee R package book section CRAN .","code":"\nremotes::install_github(\"my-user-name/myPackageName\")"},{"path":"troubleshooting.html","id":"troubleshooting","chapter":"7 Troubleshooting","heading":"7 Troubleshooting","text":"errors, warnings notes might find check fix .","code":""},{"path":"troubleshooting.html","id":"warning-library-or-require-call","chapter":"7 Troubleshooting","heading":"7.1 Warning ‘library’ or ‘require’ call","text":"Diagnosis: library() call one functions.Solution: see section 4.4.1) import functions correctly.","code":"> checking dependencies in R code ... WARNING\n  'library' or 'require' call not declared from: ‘dplyr’\n  'library' or 'require' call to ‘dplyr’ in package code.\n    Please use :: or requireNamespace() instead.\n    See section 'Suggested packages' in the 'Writing R Extensions' manual."},{"path":"troubleshooting.html","id":"note-no-visible-global-function-definition","chapter":"7 Troubleshooting","heading":"7.2 Note no visible global function definition","text":"Diagnosis: used function another package base function my_function without importing .Solution: see section 4.4.1) import functions correctly.","code":"  my_function: no visible global function definition for\n    ‘rnorm’\n  Undefined global functions or variables:\n    rnorm\n  Consider adding\n    importFrom(\"stats\", \"rnorm\")\n  to your NAMESPACE file."},{"path":"troubleshooting.html","id":"error-invalid-namespace-file","chapter":"7 Troubleshooting","heading":"7.3 Error Invalid NAMESPACE file","text":"Diagnosis: package imported @import @importFrom roxygen comments added DESCRIPTION file.Solution: Delete malformed NAMESPACE file.\nadd missing package DESCRIPTION file use_package() (see section (importing--exporting-functions))","code":"> checking package namespace information ... ERROR\n  Invalid NAMESPACE file, parsing gives:\n  Error in asChar(ivars): empty name in directive 'importFrom' in 'NAMESPACE' file\n  \n  See section ‘Package namespaces’ in the ‘Writing R Extensions’ manual."},{"path":"troubleshooting.html","id":"note-no-visible-binding-for-global-variable","chapter":"7 Troubleshooting","heading":"7.4 Note no visible binding for global variable","text":"Diagnosis: probably using dplyr, ggplot2 related packages.Solution: Use .data pronoun declare global variables (see section (using-dplyr-ggplot2-etc)).","code":"> checking R code for possible problems ... NOTE\n  my_function: no visible binding for global variable\n    ‘species’\n  Undefined global functions or variables:\n     species"},{"path":"troubleshooting.html","id":"note-non-standard-filedirectory-found-at-top-level","chapter":"7 Troubleshooting","heading":"7.5 NOTE Non-standard file/directory found at top level","text":"Diagnosis: unexpected file package’s root directory.Solution: Add file .Rbuildignore, move appropriate place, perhaps inst/.","code":"> checking top-level files ... NOTE\n  Non-standard file/directory found at top level:\n    ‘extra.R’"},{"path":"troubleshooting.html","id":"further-reading","chapter":"7 Troubleshooting","heading":"Further reading","text":"Wickham, H. Bryan, J. R PackagesWickham, H. Advanced RWriting R Extensions Official documentation CRAN.","code":""},{"path":"troubleshooting.html","id":"contributors","chapter":"7 Troubleshooting","heading":"Contributors","text":"Richard J. Telford","code":""}]
