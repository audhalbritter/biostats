``` {r setup, include=FALSE}
source("R/setup.R")
rm(penguins)
```

# R as a calculator {#sec-r-as-a-calculator}

::: callout-note
## Before we start

You must

- have installed both R and RStudio on your computer (@sec-installing).
- configured RStudio (@sec-customise-rstudio)
- know how to install and activate a package (@sec-installing-packages)
:::

## Basic operations in R

### Arithmetic operations

Performing arithmetic operations is no big deal in R. 
Simply write any operation using the usual arithmetic operators `+`, `-`, `*` and `/` and run your code. 
No need to type `=`.  

```{r}
5 + 3
9 * 2
14 / 3
```


R allows you to add parentheses `(` `)` when you need to impose the order of operations.
When it comes to raising a number to the power of another one, use the symbol `^` or `**`. 

```{r}
(24 + 3) ^ (1 / 3)
```


::: callout-note 
## Exercise

In R, calculate:

- 25 plus 49
- 6 minus 19
- 8 multiplied by 6
- 7 divided by 2
- 9 squared
- multiply the sum of 9 and 2 by 3
:::

### Comparisons

You can compare 2 elements using the following operators:

+ `>`    greater than, 
+ `>=`   greater than or equal to, 
+ `<`    less than,
+ `<=`   less than or equal to,
+ `==`   equal to,
+ `!=`   not equal to.

When comparing two elements, R returns either `TRUE` or `FALSE`.

```{r comp, echo = TRUE}
9 == 3 * 3
5 > 4
9^2 != 9 * (3 + 6)
```

::: callout-note 
## Exercise 

In R,

- Test whether 22/7 is larger than `pi`
- Test if cats are greater than dogs. Why? (remember to use quote marks)
:::

### Operations with functions

More complex operations such as square root, logarithms and exponentiation shall be run using specific functions. 
These functions are `sqrt()`, `log()`, `exp()`,  etc.

::: callout-note 
## Exercise

In R, calculate

- The square root of 29
- The exponent of 29
- The natural logarithm of 29
- The base 10 logarithm of 29

You may need to look at the built-in help (@sec-help) for some of these.
:::


::: callout-note
## What's next

How to get help (@sec-help)

:::

::: {.column-margin}
### Contributors {.unlisted .unnumbered}

-   Jonathan Soul√©
-   Aud Halbritter
-   Richard Telford
:::
